{
    "collab_server" : "",
    "contents" : "#'Forward-backward for HMM estimates.\n#'\n#'Run forward-backward for the HMM on the data with hyperparameters fixed (emission densities fixed).\n#'@param emissions The input data frame of emission densities for different test sites and 4 hidden states.\n#'@return The list of forward probabilites, backward probabilities, the number of forward-backward iterations, estimate of initial state probabilities and transition probabilities.\n#'@export\n\n\nrunHMM <- function(emissions){\n  post <- emissions\n  initPI <- rep(0.25, 4)\n  Tmat <- matrix(0.25, 4, 4)\n  iter <- 0\n  oldlogProb = 0\n  logProb = -Inf\n  c <- rep(NA, n)\n  alpha <- matrix(NA, n, 4)\n  beta <- matrix(NA, n, 4)\n  gamma <- matrix(NA, n, 4)\n  bigamma <- array(NA, c(4, 4, n))\n\n\n  while ((iter == 0 | logProb > oldlogProb) & iter <= niter){\n\n    oldlogProb <- logProb\n    c[1] <- 0\n    for (i in 1:4){\n      alpha[1,i] <- initPI[i] * post[1,i]\n      c[1] <- c[1] + alpha[1,i]\n    }\n\n    #c[1] <- 1/c[1]\n    c[1] <- 1/c[1]\n    for (i in 1:4){\n      alpha[1,i] <- c[1] * alpha[1,i]\n    }\n\n    for (t in 2:n){\n      c[t] <- 0\n      for (i in 1:4){\n        alpha[t,i] <- 0\n        for (j in 1:4){\n          alpha[t,i] <- alpha[t,i] + alpha[t-1,j] * Tmat[j,i]\n        }\n        alpha[t,i] <- alpha[t,i] * post[t,i]\n        c[t] <- c[t] + alpha[t,i]\n      }\n\n      #c[t] <- 1/c[t]\n      c[t] <- 1/c[t]\n      for (i in 1:4){\n        alpha[t,i] = c[t] * alpha[t,i]\n      }\n    }\n\n    for (i in 1:4){\n      beta[n,i] <- c[n]\n    }\n\n    for (t in (n-1):1){\n      for (i in 1:4){\n        beta[t,i] <- 0\n        for (j in 1:4){\n          beta[t,i] <- beta[t,i] + Tmat[i,j] * post[t+1,j] * beta[t+1,j]\n        }\n        beta[t,i] <- c[t] * beta[t,i]\n      }\n    }\n\n    for (t in 1:(n-1)){\n      denom <- 0\n      for (i in 1:4){\n        for (j in 1:4){\n          denom <- denom + alpha[t,i] * Tmat[i,j] * post[t+1,j] * beta[t+1,j]\n        }\n      }\n      for (i in 1:4){\n        gamma[t,i] <- 0\n        for (j in 1:4){\n          bigamma[i,j,t] <- (alpha[t,i] * Tmat[i,j] * post[t+1,j] * beta[t+1,j])/denom\n          gamma[t,i] <- gamma[t,i] + bigamma[i,j,t]\n        }\n      }\n    }\n\n    denom <- 0\n    for (i in 1:4){\n      denom <- denom + alpha[n,i]\n    }\n    for (i in 1:4){\n      gamma[n,i] <- alpha[n,i]/denom\n    }\n\n    for (i in 1:4){\n      initPI[i] <- gamma[1,i]\n    }\n    for (i in 1:4){\n      for (j in 1:4){\n        numer <- 0\n        denom <- 0\n        for (t in 1:(n-1)){\n          numer <- numer + bigamma[i,j,t]\n          denom <- denom + gamma[t,i]\n        }\n        Tmat[i,j] <- numer/denom\n      }\n    }\n\n    logProb <- 0\n    for (t in 1:n){\n      logProb <- logProb + log(c[t])\n    }\n    logProb = -logProb\n    iter <- iter + 1\n  }\n  print('HMM initial state probability estimate:')\n  print(initPI)\n  print('HMM transition probability estimate:')\n  print(Tmat)\n  print('HMM iterations:')\n  print(iter)\n  return(list(alpha, beta, iter, initPI, Tmat))\n}\n\n\n#'Posterior inference based on HMM estimates.\n#'\n#'Make posterior inference based on HMM estimates.\n#'@param alpha The forward probabilities.\n#'@param beta The backward probabilities.\n#'@param Z The true hidden states.\n#'@param train Default: True. Training mode with known true hidden states.\n#'@return A list of state inference and accuracy measure if in training setting. State inference if in testing setting (i.e. true hidden states are unknown).\n#'@export\n\nposterior_inference <- function(alpha, beta, Z = NULL, train = TRUE){\n  pos_state_prob <- alpha * beta\n  pos_state <- apply(pos_state_prob, 1, which.max)\n  print(table(pos_state))\n  if (train == TRUE){\n    print(table(Z))\n    acc = sum(pos_state == Z)/length(Z)\n    return(list(pos_state, acc))\n  }\n  else{\n    return(pos_state)\n  }\n}\n\n\n\n\n\n\n",
    "created" : 1512609049061.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1670426136",
    "id" : "A5C314D8",
    "lastKnownWriteTime" : 1512628229,
    "last_content_update" : 1512628229499,
    "path" : "~/HMMdmdv/R/runHMMinfer.R",
    "project_path" : "R/runHMMinfer.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}