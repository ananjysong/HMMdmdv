k0 = sample(1:10, 1)
mu0 = runif(1, 0.5, 5)
return(list(nu0, var0, k0, mu0, initProb, transProb))
}
library(HMMdmdv)
library(Metrics)
set.seed(12)
niter<-1000
n<-1000
n1<-30
n2<-30
# n1 <- 50
# n2 <- 50
n_state = 4
sim_round = 5
MSE_init <- rep(NA, sim_round)
MSE_indep <- rep(NA, sim_round)
MSE_hmm <- rep(NA, sim_round)
ACC <- rep(NA, sim_round)
for (i in 1:sim_round){
cat('simulation', i, '\n')
para_list = truePara_generation_1(n_state)
nu0 = para_list[[1]]
var0 = para_list[[2]]
k0 = para_list[[3]]
mu0 = para_list[[4]]
initProb = para_list[[5]]
transProb = para_list[[6]]
print('true Parameters:')
print(initProb)
print(transProb)
print(c(nu0, var0, k0, mu0))
dat_generated = data_generation(nu0, var0, k0, mu0, n, n1, n2, initProb, transProb)
A = dat_generated[[1]]
Z = dat_generated[[2]]
data_df <- remove_case3(dat = A, mean_thresholdPV = 0.1, var_thresholdPV = 0.05,
n1 = n1, n2 = n2)
init_para_est <- init_est(dat_df = data_df, mean_thresholdPV = 0.05, var_thresholdPV = 0.1,
n1 = n1, n2 = n2, n = n)
EM_para_est <- runEM(dat_df = data_df, n1 = n1, n2 = n2, init_para_est= init_para_est, niter = niter)
i <- EM_para_est[1]
theta_est <- EM_para_est[-1]
PI <- (1-init_para_est[3])*theta_est[1:3]
PI<-c(PI[1],PI[2],init_para_est[3],PI[3])
nu<-theta_est[4]
var<-theta_est[5]
k<-theta_est[6]
mu<-theta_est[7]
indep_para_est <- c(PI, nu, var, k, mu)
print('independent EM parameter estimate:')
print(indep_para_est)
emissions <- emission_probs(indep_para_est[5], indep_para_est[6], indep_para_est[7], indep_para_est[8], A, n1 = n1, n2 = n2)
HMM_resList <- runHMM(emissions)
alpha <- HMM_resList[[1]]
beta <- HMM_resList[[2]]
print('HMM iterations:')
print(HMM_resList[[3]])
print('HMM initial probability and transition probability estimates:')
print(HMM_resList[[4]])
print(HMM_resList[[5]])
acc <- posterior_inference(alpha, beta, Z)
cat('acc:', acc, '\n')
mse_init <- mse(c(nu0, var0, k0, mu0), init_para_est[5:8])
cat('mse_init:', mse_init, '\n')
mse_indep <- mse(c(nu0, var0, k0, mu0), indep_para_est[5:8])
cat('mse_indep:', mse_indep, '\n')
mse_hmm <- mse(c(transProb), c(HMM_resList[[5]]))
cat('mse_hmm:', mse_hmm, '\n')
ACC[i] = acc
MSE_init[i] = mse_init
MSE_hmm[i] = mse_hmm
MSE_indep[i] = mse_indep
}
sim_round = 5
MSE_init <- rep(NA, sim_round)
MSE_indep <- rep(NA, sim_round)
MSE_hmm <- rep(NA, sim_round)
ACC <- rep(NA, sim_round)
for (i in 1:sim_round){
cat('simulation', i, '\n')
para_list = truePara_generation_1(n_state)
nu0 = para_list[[1]]
var0 = para_list[[2]]
k0 = para_list[[3]]
mu0 = para_list[[4]]
initProb = para_list[[5]]
transProb = para_list[[6]]
print('true Parameters:')
print(initProb)
print(transProb)
print(c(nu0, var0, k0, mu0))
dat_generated = data_generation(nu0, var0, k0, mu0, n, n1, n2, initProb, transProb)
A = dat_generated[[1]]
Z = dat_generated[[2]]
data_df <- remove_case3(dat = A, mean_thresholdPV = 0.1, var_thresholdPV = 0.05,
n1 = n1, n2 = n2)
init_para_est <- init_est(dat_df = data_df, mean_thresholdPV = 0.05, var_thresholdPV = 0.1,
n1 = n1, n2 = n2, n = n)
EM_para_est <- runEM(dat_df = data_df, n1 = n1, n2 = n2, init_para_est= init_para_est, niter = niter)
i <- EM_para_est[1]
theta_est <- EM_para_est[-1]
PI <- (1-init_para_est[3])*theta_est[1:3]
PI<-c(PI[1],PI[2],init_para_est[3],PI[3])
nu<-theta_est[4]
var<-theta_est[5]
k<-theta_est[6]
mu<-theta_est[7]
indep_para_est <- c(PI, nu, var, k, mu)
print('independent EM parameter estimate:')
print(indep_para_est)
emissions <- emission_probs(indep_para_est[5], indep_para_est[6], indep_para_est[7], indep_para_est[8], A, n1 = n1, n2 = n2)
HMM_resList <- runHMM(emissions)
alpha <- HMM_resList[[1]]
beta <- HMM_resList[[2]]
print('HMM iterations:')
print(HMM_resList[[3]])
print('HMM initial probability and transition probability estimates:')
print(HMM_resList[[4]])
print(HMM_resList[[5]])
acc <- posterior_inference(alpha, beta, Z)
cat('acc:', acc, '\n')
mse_init <- mse(c(nu0, var0, k0, mu0), init_para_est[5:8])
cat('mse_init:', mse_init, '\n')
mse_indep <- mse(c(nu0, var0, k0, mu0), indep_para_est[5:8])
cat('mse_indep:', mse_indep, '\n')
mse_hmm <- mse(c(transProb), c(HMM_resList[[5]]))
cat('mse_hmm:', mse_hmm, '\n')
ACC[i] = acc
MSE_init[i] = mse_init
MSE_hmm[i] = mse_hmm
MSE_indep[i] = mse_indep
}
truePara_generation_1 <- function(n_state){
initProb = runif(n_state)
initProb = initProb/sum(initProb)
transProb = matrix(NA, n_state, n_state)
for (i in 1:n_state){
transProb[i,] = runif(n_state)
transProb[i,] = transProb[i,]/sum(transProb[i,])
}
nu0 = runif(1, 1, 8)
var0 = runif(1, 1, 30)
k0 = sample(1:10, 1)
mu0 = runif(1, -5, 5)
return(list(nu0, var0, k0, mu0, initProb, transProb))
}
niter<-1000
n<-1000
n1<-30
n2<-30
# n1 <- 50
# n2 <- 50
n_state = 4
sim_round = 5
MSE_init <- rep(NA, sim_round)
MSE_indep <- rep(NA, sim_round)
MSE_hmm <- rep(NA, sim_round)
ACC <- rep(NA, sim_round)
for (i in 1:sim_round){
cat('simulation', i, '\n')
para_list = truePara_generation_1(n_state)
nu0 = para_list[[1]]
var0 = para_list[[2]]
k0 = para_list[[3]]
mu0 = para_list[[4]]
initProb = para_list[[5]]
transProb = para_list[[6]]
print('true Parameters:')
print(initProb)
print(transProb)
print(c(nu0, var0, k0, mu0))
dat_generated = data_generation(nu0, var0, k0, mu0, n, n1, n2, initProb, transProb)
A = dat_generated[[1]]
Z = dat_generated[[2]]
data_df <- remove_case3(dat = A, mean_thresholdPV = 0.1, var_thresholdPV = 0.05,
n1 = n1, n2 = n2)
init_para_est <- init_est(dat_df = data_df, mean_thresholdPV = 0.05, var_thresholdPV = 0.1,
n1 = n1, n2 = n2, n = n)
EM_para_est <- runEM(dat_df = data_df, n1 = n1, n2 = n2, init_para_est= init_para_est, niter = niter)
i <- EM_para_est[1]
theta_est <- EM_para_est[-1]
PI <- (1-init_para_est[3])*theta_est[1:3]
PI<-c(PI[1],PI[2],init_para_est[3],PI[3])
nu<-theta_est[4]
var<-theta_est[5]
k<-theta_est[6]
mu<-theta_est[7]
indep_para_est <- c(PI, nu, var, k, mu)
print('independent EM parameter estimate:')
print(indep_para_est)
emissions <- emission_probs(indep_para_est[5], indep_para_est[6], indep_para_est[7], indep_para_est[8], A, n1 = n1, n2 = n2)
HMM_resList <- runHMM(emissions)
alpha <- HMM_resList[[1]]
beta <- HMM_resList[[2]]
print('HMM iterations:')
print(HMM_resList[[3]])
print('HMM initial probability and transition probability estimates:')
print(HMM_resList[[4]])
print(HMM_resList[[5]])
acc <- posterior_inference(alpha, beta, Z)
cat('acc:', acc, '\n')
mse_init <- mse(c(nu0, var0, k0, mu0), init_para_est[5:8])
cat('mse_init:', mse_init, '\n')
mse_indep <- mse(c(nu0, var0, k0, mu0), indep_para_est[5:8])
cat('mse_indep:', mse_indep, '\n')
mse_hmm <- mse(c(transProb), c(HMM_resList[[5]]))
cat('mse_hmm:', mse_hmm, '\n')
ACC[i] = acc
MSE_init[i] = mse_init
MSE_hmm[i] = mse_hmm
MSE_indep[i] = mse_indep
}
niter<-1000
n<-1000
n1<-30
n2<-30
# n1 <- 50
# n2 <- 50
n_state = 4
sim_round = 5
MSE_init <- rep(NA, sim_round)
MSE_indep <- rep(NA, sim_round)
MSE_hmm <- rep(NA, sim_round)
ACC <- rep(NA, sim_round)
for (i in 1:sim_round){
cat('simulation', i, '\n')
para_list = truePara_generation_1(n_state)
nu0 = para_list[[1]]
var0 = para_list[[2]]
k0 = para_list[[3]]
mu0 = para_list[[4]]
initProb = para_list[[5]]
transProb = para_list[[6]]
print('true Parameters:')
print(initProb)
print(transProb)
print(c(nu0, var0, k0, mu0))
dat_generated = data_generation(nu0, var0, k0, mu0, n, n1, n2, initProb, transProb)
A = dat_generated[[1]]
Z = dat_generated[[2]]
data_df <- remove_case3(dat = A, mean_thresholdPV = 0.1, var_thresholdPV = 0.05,
n1 = n1, n2 = n2)
init_para_est <- init_est(dat_df = data_df, mean_thresholdPV = 0.05, var_thresholdPV = 0.1,
n1 = n1, n2 = n2, n = n)
EM_para_est <- runEM(dat_df = data_df, n1 = n1, n2 = n2, init_para_est= init_para_est, niter = niter)
i <- EM_para_est[1]
theta_est <- EM_para_est[-1]
PI <- (1-init_para_est[3])*theta_est[1:3]
PI<-c(PI[1],PI[2],init_para_est[3],PI[3])
nu<-theta_est[4]
var<-theta_est[5]
k<-theta_est[6]
mu<-theta_est[7]
indep_para_est <- c(PI, nu, var, k, mu)
print('independent EM parameter estimate:')
print(indep_para_est)
emissions <- emission_probs(indep_para_est[5], indep_para_est[6], indep_para_est[7], indep_para_est[8], A, n1 = n1, n2 = n2)
HMM_resList <- runHMM(emissions)
alpha <- HMM_resList[[1]]
beta <- HMM_resList[[2]]
print('HMM iterations:')
print(HMM_resList[[3]])
print('HMM initial probability and transition probability estimates:')
print(HMM_resList[[4]])
print(HMM_resList[[5]])
acc <- posterior_inference(alpha, beta, Z)
cat('acc:', acc, '\n')
mse_init <- mse(c(nu0, var0, k0, mu0), init_para_est[5:8])
cat('mse_init:', mse_init, '\n')
mse_indep <- mse(c(nu0, var0, k0, mu0), indep_para_est[5:8])
cat('mse_indep:', mse_indep, '\n')
mse_hmm <- mse(c(transProb), c(HMM_resList[[5]]))
cat('mse_hmm:', mse_hmm, '\n')
ACC[i] = acc
MSE_init[i] = mse_init
MSE_hmm[i] = mse_hmm
MSE_indep[i] = mse_indep
}
niter<-1000
n<-1000
n1<-30
n2<-30
# n1 <- 50
# n2 <- 50
n_state = 4
sim_round = 5
MSE_init <- rep(NA, sim_round)
MSE_indep <- rep(NA, sim_round)
MSE_hmm <- rep(NA, sim_round)
ACC <- rep(NA, sim_round)
for (i in 1:sim_round){
cat('simulation', i, '\n')
para_list = truePara_generation_1(n_state)
nu0 = para_list[[1]]
var0 = para_list[[2]]
k0 = para_list[[3]]
mu0 = para_list[[4]]
initProb = para_list[[5]]
transProb = para_list[[6]]
print('true Parameters:')
print(initProb)
print(transProb)
print(c(nu0, var0, k0, mu0))
dat_generated = data_generation(nu0, var0, k0, mu0, n, n1, n2, initProb, transProb)
A = dat_generated[[1]]
Z = dat_generated[[2]]
data_df <- remove_case3(dat = A, mean_thresholdPV = 0.1, var_thresholdPV = 0.05,
n1 = n1, n2 = n2)
init_para_est <- init_est(dat_df = data_df, mean_thresholdPV = 0.05, var_thresholdPV = 0.1,
n1 = n1, n2 = n2, n = n)
EM_para_est <- runEM(dat_df = data_df, n1 = n1, n2 = n2, init_para_est= init_para_est, niter = niter)
i <- EM_para_est[1]
theta_est <- EM_para_est[-1]
PI <- (1-init_para_est[3])*theta_est[1:3]
PI<-c(PI[1],PI[2],init_para_est[3],PI[3])
nu<-theta_est[4]
var<-theta_est[5]
k<-theta_est[6]
mu<-theta_est[7]
indep_para_est <- c(PI, nu, var, k, mu)
print('independent EM parameter estimate:')
print(indep_para_est)
emissions <- emission_probs(indep_para_est[5], indep_para_est[6], indep_para_est[7], indep_para_est[8], A, n1 = n1, n2 = n2)
HMM_resList <- runHMM(emissions)
alpha <- HMM_resList[[1]]
beta <- HMM_resList[[2]]
print('HMM iterations:')
print(HMM_resList[[3]])
print('HMM initial probability and transition probability estimates:')
print(HMM_resList[[4]])
print(HMM_resList[[5]])
acc <- posterior_inference(alpha, beta, Z)
cat('acc:', acc, '\n')
mse_init <- mse(c(nu0, var0, k0, mu0), init_para_est[5:8])
cat('mse_init:', mse_init, '\n')
mse_indep <- mse(c(nu0, var0, k0, mu0), indep_para_est[5:8])
cat('mse_indep:', mse_indep, '\n')
mse_hmm <- mse(c(transProb), c(HMM_resList[[5]]))
cat('mse_hmm:', mse_hmm, '\n')
ACC[i] = acc
MSE_init[i] = mse_init
MSE_hmm[i] = mse_hmm
MSE_indep[i] = mse_indep
}
niter<-1000
n<-1000
n1<-30
n2<-30
# n1 <- 50
# n2 <- 50
n_state = 4
sim_round = 5
MSE_init <- rep(NA, sim_round)
MSE_indep <- rep(NA, sim_round)
MSE_hmm <- rep(NA, sim_round)
ACC <- rep(NA, sim_round)
for (i in 1:sim_round){
cat('simulation', i, '\n')
para_list = truePara_generation_1(n_state)
nu0 = para_list[[1]]
var0 = para_list[[2]]
k0 = para_list[[3]]
mu0 = para_list[[4]]
initProb = para_list[[5]]
transProb = para_list[[6]]
print('true Parameters:')
print(initProb)
print(transProb)
print(c(nu0, var0, k0, mu0))
dat_generated = data_generation(nu0, var0, k0, mu0, n, n1, n2, initProb, transProb)
A = dat_generated[[1]]
Z = dat_generated[[2]]
data_df <- remove_case3(dat = A, mean_thresholdPV = 0.1, var_thresholdPV = 0.05,
n1 = n1, n2 = n2)
init_para_est <- init_est(dat_df = data_df, mean_thresholdPV = 0.05, var_thresholdPV = 0.1,
n1 = n1, n2 = n2, n = n)
EM_para_est <- runEM(dat_df = data_df, n1 = n1, n2 = n2, init_para_est= init_para_est, niter = niter)
i <- EM_para_est[1]
theta_est <- EM_para_est[-1]
PI <- (1-init_para_est[3])*theta_est[1:3]
PI<-c(PI[1],PI[2],init_para_est[3],PI[3])
nu<-theta_est[4]
var<-theta_est[5]
k<-theta_est[6]
mu<-theta_est[7]
indep_para_est <- c(PI, nu, var, k, mu)
print('independent EM parameter estimate:')
print(indep_para_est)
emissions <- emission_probs(indep_para_est[5], indep_para_est[6], indep_para_est[7], indep_para_est[8], A, n1 = n1, n2 = n2)
HMM_resList <- runHMM(emissions)
alpha <- HMM_resList[[1]]
beta <- HMM_resList[[2]]
print('HMM iterations:')
print(HMM_resList[[3]])
print('HMM initial probability and transition probability estimates:')
print(HMM_resList[[4]])
print(HMM_resList[[5]])
acc <- posterior_inference(alpha, beta, Z)
cat('acc:', acc, '\n')
mse_init <- mse(c(nu0, var0, k0, mu0), init_para_est[5:8])
cat('mse_init:', mse_init, '\n')
mse_indep <- mse(c(nu0, var0, k0, mu0), indep_para_est[5:8])
cat('mse_indep:', mse_indep, '\n')
mse_hmm <- mse(c(transProb), c(HMM_resList[[5]]))
cat('mse_hmm:', mse_hmm, '\n')
ACC[i] = acc
MSE_init[i] = mse_init
MSE_hmm[i] = mse_hmm
MSE_indep[i] = mse_indep
}
niter<-1000
n<-1000
n1<-30
n2<-30
# n1 <- 50
# n2 <- 50
n_state = 4
sim_round = 5
MSE_init <- rep(NA, sim_round)
MSE_indep <- rep(NA, sim_round)
MSE_hmm <- rep(NA, sim_round)
ACC <- rep(NA, sim_round)
for (i in 1:sim_round){
cat('simulation', i, '\n')
para_list = truePara_generation_1(n_state)
nu0 = para_list[[1]]
var0 = para_list[[2]]
k0 = para_list[[3]]
mu0 = para_list[[4]]
initProb = para_list[[5]]
transProb = para_list[[6]]
print('true Parameters:')
print(initProb)
print(transProb)
print(c(nu0, var0, k0, mu0))
dat_generated = data_generation(nu0, var0, k0, mu0, n, n1, n2, initProb, transProb)
A = dat_generated[[1]]
Z = dat_generated[[2]]
data_df <- remove_case3(dat = A, mean_thresholdPV = 0.1, var_thresholdPV = 0.05,
n1 = n1, n2 = n2)
init_para_est <- init_est(dat_df = data_df, mean_thresholdPV = 0.05, var_thresholdPV = 0.1,
n1 = n1, n2 = n2, n = n)
EM_para_est <- runEM(dat_df = data_df, n1 = n1, n2 = n2, init_para_est= init_para_est, niter = niter)
i <- EM_para_est[1]
theta_est <- EM_para_est[-1]
PI <- (1-init_para_est[3])*theta_est[1:3]
PI<-c(PI[1],PI[2],init_para_est[3],PI[3])
nu<-theta_est[4]
var<-theta_est[5]
k<-theta_est[6]
mu<-theta_est[7]
indep_para_est <- c(PI, nu, var, k, mu)
print('independent EM parameter estimate:')
print(indep_para_est)
emissions <- emission_probs(indep_para_est[5], indep_para_est[6], indep_para_est[7], indep_para_est[8], A, n1 = n1, n2 = n2)
HMM_resList <- runHMM(emissions)
alpha <- HMM_resList[[1]]
beta <- HMM_resList[[2]]
print('HMM iterations:')
print(HMM_resList[[3]])
print('HMM initial probability and transition probability estimates:')
print(HMM_resList[[4]])
print(HMM_resList[[5]])
acc <- posterior_inference(alpha, beta, Z)
cat('acc:', acc, '\n')
mse_init <- mse(c(nu0, var0, k0, mu0), init_para_est[5:8])
cat('mse_init:', mse_init, '\n')
mse_indep <- mse(c(nu0, var0, k0, mu0), indep_para_est[5:8])
cat('mse_indep:', mse_indep, '\n')
mse_hmm <- mse(c(transProb), c(HMM_resList[[5]]))
cat('mse_hmm:', mse_hmm, '\n')
ACC[i] = acc
MSE_init[i] = mse_init
MSE_hmm[i] = mse_hmm
MSE_indep[i] = mse_indep
}
library(HMMdmdv)
initProb<-c(0.55,0.2,0.12,0.13)
transProb<-matrix(c(0.75,0.1,0.1,0.05,
0.4,0.3,0.13,0.17,
0.5,0.2,0.16,0.14,
0.6,0.14,0.05,0.21),4,4,byrow=T)
nu0<-4
var0<-25
k0<-2
mu0<-1
niter<-1000
n<-1000
n1 <- 50
n2 <- 50
A = data_generation(nu0, var0, k0, mu0, n, n1, n2, initProb, transProb)
dim(A[[1]])
head(A)
head(A[[1]])
example_data <- A[[1]]
dim(example_data)
save(example_data, file = "example_data.rda")
devtools::use_vignette("vignette")
usethis::use_vignette()
usethis::use_vignette("vignette")
usethis::use_vignette("Vignette")
data("example_data")
head(example_data)
library(HMMdmdv)
rm(list=ls())
data("example_data")
head(example_data)
rm(list=ls())
data(example_data)
library(HMMdmdv)
devtools::build()
help(package="HMMdmdv")
